/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bigbrother;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.net.InetAddress;
import java.util.Calendar;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.Semaphore;
import javax.swing.Timer;
import javax.swing.JOptionPane;

/**
 *
 * @author Georgi
 */
public class AdminGUI extends javax.swing.JFrame {

    /**
     * Creates new form AdminGUI
     */
    private Timer theTimer;
    public int h1Votes = 0;
    public int h2Votes = 0;
    public int h3Votes = 0;
    public int h4Votes = 0;
    public int h5Votes = 0;
    public int h6Votes = 0;
    public int h7Votes = 0;
    public int h8Votes = 0;
    public int h9Votes = 0;
    public int h10Votes = 0;
    //use this collection to link a person and his votes
    public volatile static ConcurrentHashMap<String, Integer> peopleVotes;
    //since hashmap doesn't store the elements in the way they are added I am
    //using arraylist as well to keep their order and look neater
    public volatile static CopyOnWriteArrayList<String> members;
    private volatile static boolean votingOpen;
    private static String votingOpenedAt;
    private static String votingClosedAt;
    private static CopyOnWriteArrayList<InetAddress> connected;
    private static Calendar lastMostVotes;
    public static volatile String currentLog = "";
    private StartServer serverListener;

    public AdminGUI() {
        peopleVotes = new ConcurrentHashMap<String, Integer>();
        members = new CopyOnWriteArrayList<>();
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        votingLog = new javax.swing.JTextArea();
        startVoting = new javax.swing.JButton();
        stopVoting = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        h1Field = new javax.swing.JTextField();
        h2Field = new javax.swing.JTextField();
        h3Field = new javax.swing.JTextField();
        h4Field = new javax.swing.JTextField();
        h7Field = new javax.swing.JTextField();
        h6Field = new javax.swing.JTextField();
        h8Field = new javax.swing.JTextField();
        h5Field = new javax.swing.JTextField();
        h9Field = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        h10Field = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        mostVotesField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        clearMembersButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        removeField = new javax.swing.JTextField();
        removeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFieldActionPerformed(evt);
            }
        });
        addField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addFieldKeyPressed(evt);
            }
        });

        jLabel1.setLabelFor(addField);
        jLabel1.setText("Add Householder:");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        addButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addButtonKeyPressed(evt);
            }
        });

        progressBar.setMaximum(10);
        progressBar.setBorder(javax.swing.BorderFactory.createTitledBorder("Slots taken:"));

        jLabel5.setText("Voting log:");

        votingLog.setColumns(20);
        votingLog.setRows(5);
        votingLog.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(votingLog);

        startVoting.setText("Start voting");
        startVoting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startVotingActionPerformed(evt);
            }
        });

        stopVoting.setText("Stop voting");
        stopVoting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopVotingActionPerformed(evt);
            }
        });

        jLabel6.setText("Houselolder1 :");

        jLabel7.setText("Houselolder2 :");

        jLabel8.setText("Houselolder3  :");

        jLabel9.setText("Houselolder4 :");

        jLabel10.setText("Houselolder5 :");

        jLabel11.setText("Houselolder6 :");

        jLabel12.setText("Houselolder7 :");

        jLabel13.setText("Houselolder8 :");

        jLabel14.setText("Houselolder9 :");

        jLabel15.setText("Houselolder10 :");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Big Brother Control Panel");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Most votes");

        clearMembersButton.setText("Clear all Members");
        clearMembersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMembersButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Remove member:");

        removeButton.setText("Clear Member");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(addField, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(16, 16, 16)
                                            .addComponent(startVoting, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel5)))
                                    .addGap(31, 31, 31)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(clearMembersButton)
                                        .addComponent(stopVoting, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(mostVotesField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(21, 21, 21))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(24, 24, 24)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(h2Field, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                    .addComponent(h6Field, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(h5Field, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(h7Field, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(h4Field, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(h3Field, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(h8Field, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel15))
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(h9Field, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(h10Field, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(h1Field, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(removeField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(298, 298, 298)
                        .addComponent(jLabel16)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startVoting, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stopVoting, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(addField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(removeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(h1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(h2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(h3Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(h4Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(clearMembersButton))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(h5Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(h8Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(h6Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel14)
                            .addComponent(h9Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(h7Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(h10Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mostVotesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static void insertConnection(InetAddress ad) {
        connected.add(ad);
    }

    public static CopyOnWriteArrayList<InetAddress> getConnected() {
        return connected;
    }

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //add a member to the collections with initial votes 0
        if (!addField.getText().equals("") && peopleVotes.size() < 10
                && !peopleVotes.containsKey(addField.getText())) {
            peopleVotes.put(addField.getText(), 0);
            members.add(addField.getText());
        }
        addField.setText("");
    }//GEN-LAST:event_addButtonActionPerformed

    private void startVotingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startVotingActionPerformed
        startVoting.setEnabled(false);
        stopVoting.setEnabled(true);
        startServer();
        Calendar now = Calendar.getInstance();
        votingLog.setText("");
        votingOpenedAt = "Voting started at: " + now.get(Calendar.HOUR_OF_DAY) + ":" + now.get(Calendar.MINUTE);
        currentLog = votingOpenedAt + "\n";
        votingLog.setText(currentLog);
        connected.clear();
        for(String key:peopleVotes.keySet()){
            peopleVotes.replace(key, 0);
        }
        votingOpen = true;
    }//GEN-LAST:event_startVotingActionPerformed
    public void startServer() {
        //creates a new server, which starts listening
        serverListener = new StartServer();
        serverListener.start();
    }
    /**
     * 
     * @return when the voting has been opened
     */
    public static String getVotingOpenedAt() {
        return votingOpenedAt;
    }
    /**
     * This method is triggered when a voting round is stopped.
     * @param evt 
     */
    private void stopVotingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopVotingActionPerformed
        votingOpen = false;
        startVoting.setEnabled(true);
        stopVoting.setEnabled(false);
        Calendar now = Calendar.getInstance();
        votingClosedAt = "Voting ended at: " + now.get(Calendar.HOUR_OF_DAY) + ":" + now.get(Calendar.MINUTE);
        currentLog += votingClosedAt + "\n";
    }//GEN-LAST:event_stopVotingActionPerformed

    /**
     * 
     * @return a string of when the voting has been closed 
     */
    public static String getVotingClosedAt() {
        return votingClosedAt;
    }
    private void addFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFieldActionPerformed
        // not used
    }//GEN-LAST:event_addFieldActionPerformed

    private void addButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addButtonKeyPressed
        //not used
    }//GEN-LAST:event_addButtonKeyPressed

    private void addFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addFieldKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!addField.getText().equals("") && peopleVotes.size() < 10
                    && !peopleVotes.containsKey(addField.getText())) {
                peopleVotes.put(addField.getText(), 0);
                members.add(addField.getText());
            }
            addField.setText("");
            //populateFields(); fields are populated in the timer
        }
    }//GEN-LAST:event_addFieldKeyPressed
    /**
     * The method makes all member fields empty.
     */
    private void clearFields() {
        h1Field.setText("");
        h2Field.setText("");
        h3Field.setText("");
        h4Field.setText("");
        h5Field.setText("");
        h6Field.setText("");
        h7Field.setText("");
        h8Field.setText("");
        h9Field.setText("");
        h10Field.setText("");
    }
    /**
     * This method clears all fields and removes the members from the collections.
     * @param evt 
     */
    private void clearMembersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMembersButtonActionPerformed
        // TODO add your handling code here:
        if (isVotingOpen()) {
            JOptionPane.showMessageDialog(this, "Voting is still open, close voting first!");
        } else {
            peopleVotes.clear();
            members.clear();
            clearFields();
        }
    }//GEN-LAST:event_clearMembersButtonActionPerformed

    /**
     * The method removes a nominee from the array and hashmap with nominees.
     * @param evt 
     */
    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        String memb = removeField.getText();
        if (isVotingOpen()) {
            JOptionPane.showMessageDialog(this, "Voting is still open, close voting first!");
        } else {
            if (!memb.equals("")) {
                if (peopleVotes.containsKey(memb) && members.contains(memb)) {
                    peopleVotes.remove(memb);
                    members.remove(memb);
                    removeField.setText("");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No such entry found!");
                    removeField.setText("");
                }
            }
        }

    }//GEN-LAST:event_removeButtonActionPerformed
    /**
     * Returns true if the voting is open, false otherwise.
     * @return 
     */
    public static boolean isVotingOpen() {
        return votingOpen;
    }
    /**
     * This method checks if there is such nominee in the hashmap and if the user
     * hasn't voted before. If the requirements are satisfied, then the value for
     * the nominee is incremented.
     * @param st user's vote(nominee name)
     * @param ia IP address of the user attempting to vote
     * @return true/false depending whether the vote has been
     * successful
     */
    public static boolean vote(String st, InetAddress ia) {
        if (peopleVotes.containsKey(st) && !connected.contains(ia)) {
            peopleVotes.replace(st, peopleVotes.get(st) + 1);
            insertConnection(ia);
            return true;
        }
        return false;
    }

    /**
     * This method checks how many nominees are there and assigns a text field
     * for them.
     */
    public void populateFields() {
        clearFields();
        for (int i = 0; i < members.size(); i++) {
            String st = members.get(i);
            if (i == 0) {
                h1Field.setText(st + " has " + peopleVotes.get(st) + " votes");
            } else if (i == 1) {
                h2Field.setText(st + " has " + peopleVotes.get(st) + " votes");
            } else if (i == 2) {
                h3Field.setText(st + " has " + peopleVotes.get(st) + " votes");

            } else if (i == 3) {
                h4Field.setText(st + " has " + peopleVotes.get(st) + " votes");

            } else if (i == 4) {
                h5Field.setText(st + " has " + peopleVotes.get(st) + " votes");

            } else if (i == 5) {
                h6Field.setText(st + " has " + peopleVotes.get(st) + " votes");

            } else if (i == 6) {
                h7Field.setText(st + " has " + peopleVotes.get(st) + " votes");

            } else if (i == 7) {
                h8Field.setText(st + " has " + peopleVotes.get(st) + " votes");

            } else if (i == 8) {
                h9Field.setText(st + " has " + peopleVotes.get(st) + " votes");
            } else if (i == 9) {
                h10Field.setText(st + " has " + peopleVotes.get(st) + " votes");
            }
        }
        if (members.size() == 0) {
            //if there are none, then clear all fields
            clearFields();
        }
    }

    /**
     * The method goes through the nominees and returns the name of the one with
     * most votes and the number of votes next to it.
     *
     * @return
     */
    public static String mostVotes() {
        String maxName = "";
        int maxVotes = 0;
        for (String st : peopleVotes.keySet()) {
            if (peopleVotes.get(st) > maxVotes) {
                maxVotes = peopleVotes.get(st);
                maxName = st;
            }
        }
        lastMostVotes = Calendar.getInstance();
        return maxName + " " + maxVotes;

    }

    /**
     * The method returns the hour and minutes of the last vote for the user
     * with most votes
     *
     * @return
     */
    public static String getMostVotesTime() {
        return lastMostVotes.get(Calendar.HOUR_OF_DAY) + ":" + lastMostVotes.get(Calendar.MINUTE);
    }

    /**
     * Add more information to the voting log.
     *
     * @param st string to be appended
     */
    public static void updateLog(String st) {
        currentLog += st;
    }

    /**
     * This method is used to initialise some of the variables.
     */
    public void init() {
        this.setLocationRelativeTo(null);//center the gui
        votingLog.setEditable(false);
        progressBar.setStringPainted(true);
        stopVoting.setEnabled(false);
        Calendar now = Calendar.getInstance();//voting is closed by default
        votingClosedAt = "Voting ended at: " + now.get(Calendar.HOUR_OF_DAY) + ":" + now.get(Calendar.MINUTE);
        votingOpen = false;
        connected = new CopyOnWriteArrayList<>();

        theTimer = new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                progressBar.setValue(peopleVotes.size());
                //update most votes
                mostVotesField.setText(mostVotes());
                populateFields();
                votingLog.setText(currentLog);

            }
        });
        // start timer
        theTimer.setInitialDelay(0);
        theTimer.start();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addField;
    private javax.swing.JButton clearMembersButton;
    private javax.swing.JTextField h10Field;
    private javax.swing.JTextField h1Field;
    private javax.swing.JTextField h2Field;
    private javax.swing.JTextField h3Field;
    private javax.swing.JTextField h4Field;
    private javax.swing.JTextField h5Field;
    private javax.swing.JTextField h6Field;
    private javax.swing.JTextField h7Field;
    private javax.swing.JTextField h8Field;
    private javax.swing.JTextField h9Field;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextField mostVotesField;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextField removeField;
    private javax.swing.JButton startVoting;
    private javax.swing.JButton stopVoting;
    private static javax.swing.JTextArea votingLog;
    // End of variables declaration//GEN-END:variables
}
